{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\082601-外卖送餐\\管理后台前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\082601-外卖送餐\\管理后台前端\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\082601-外卖送餐\\管理后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\082601-外卖送餐\\管理后台前端\\src\\views\\admin\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\082601-外卖送餐\\管理后台前端\\src\\views\\admin\\index.vue","mtime":1661931199884},{"path":"C:\\Users\\lenovo\\Desktop\\082601-外卖送餐\\管理后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641885170445},{"path":"C:\\Users\\lenovo\\Desktop\\082601-外卖送餐\\管理后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1641885170443},{"path":"C:\\Users\\lenovo\\Desktop\\082601-外卖送餐\\管理后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641885170445},{"path":"C:\\Users\\lenovo\\Desktop\\082601-外卖送餐\\管理后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1642038070263}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC52YWx1ZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGFwaSBmcm9tICJAL2FwaS9hcGkiOwppbXBvcnQgeyBMaW5lLCBQaWUgfSBmcm9tICJAYW50di9nMnBsb3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVybDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0ZJTEUsCiAgICAgIGxpc3Q6IFtdLAogICAgICBwZW9wbGU6IDAKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0VXNlcigpOwogICAgdGhpcy5nZXRNZW51KCk7CiAgICB0aGlzLmdldE1vbnRoKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL+eUqOaIt+aVsOmHjwogICAgZ2V0VXNlcjogZnVuY3Rpb24gZ2V0VXNlcigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBkYXRhID0gewogICAgICAgICIwMSI6IHsKICAgICAgICAgIG1vbnRoOiAiMDEiLAogICAgICAgICAgbnVtOiAwCiAgICAgICAgfSwKICAgICAgICAiMDIiOiB7CiAgICAgICAgICBtb250aDogIjAyIiwKICAgICAgICAgIG51bTogMAogICAgICAgIH0sCiAgICAgICAgIjAzIjogewogICAgICAgICAgbW9udGg6ICIwMyIsCiAgICAgICAgICBudW06IDAKICAgICAgICB9LAogICAgICAgICIwNCI6IHsKICAgICAgICAgIG1vbnRoOiAiMDQiLAogICAgICAgICAgbnVtOiAwCiAgICAgICAgfSwKICAgICAgICAiMDUiOiB7CiAgICAgICAgICBtb250aDogIjA1IiwKICAgICAgICAgIG51bTogMAogICAgICAgIH0sCiAgICAgICAgIjA2IjogewogICAgICAgICAgbW9udGg6ICIwNiIsCiAgICAgICAgICBudW06IDAKICAgICAgICB9LAogICAgICAgICIwNyI6IHsKICAgICAgICAgIG1vbnRoOiAiMDciLAogICAgICAgICAgbnVtOiAwCiAgICAgICAgfSwKICAgICAgICAiMDgiOiB7CiAgICAgICAgICBtb250aDogIjA4IiwKICAgICAgICAgIG51bTogMAogICAgICAgIH0sCiAgICAgICAgIjA5IjogewogICAgICAgICAgbW9udGg6ICIwOSIsCiAgICAgICAgICBudW06IDAKICAgICAgICB9LAogICAgICAgIDEwOiB7CiAgICAgICAgICBtb250aDogIjEwIiwKICAgICAgICAgIG51bTogMAogICAgICAgIH0sCiAgICAgICAgMTE6IHsKICAgICAgICAgIG1vbnRoOiAiMTEiLAogICAgICAgICAgbnVtOiAwCiAgICAgICAgfSwKICAgICAgICAxMjogewogICAgICAgICAgbW9udGg6ICIxMiIsCiAgICAgICAgICBudW06IDAKICAgICAgICB9CiAgICAgIH07CiAgICAgIGFwaS51c2VybGlzdCh7CiAgICAgICAgbGltaXQ6IDk5OTk5LAogICAgICAgIG9mZnNldDogMQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmRhdGEudG90YWwgPiAwKSB7CiAgICAgICAgICBfdGhpcy5wZW9wbGUgPSByZXMuZGF0YS50b3RhbDsKICAgICAgICAgIHJlcy5kYXRhLmxpc3QuZm9yRWFjaChmdW5jdGlvbiAoaSkgewogICAgICAgICAgICBkYXRhW2kudGltZS5zdWJzdHIoNSwgMildWyJudW0iXSArPSAxOwogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICB2YXIgbmV3ZGF0YSA9IE9iamVjdC52YWx1ZXMoZGF0YSkubWFwKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICByZXR1cm4gaTsKICAgICAgICB9KTsKICAgICAgICBuZXdkYXRhLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICAgIHJldHVybiBOdW1iZXIoYS5tb250aCkgLSBOdW1iZXIoYi5tb250aCk7CiAgICAgICAgfSk7CiAgICAgICAgdmFyIGxpbmUgPSBuZXcgTGluZSgiY29udGFpbmVyIiwgewogICAgICAgICAgZGF0YTogbmV3ZGF0YSwKICAgICAgICAgIHBhZGRpbmc6ICJhdXRvIiwKICAgICAgICAgIHhGaWVsZDogIm1vbnRoIiwKICAgICAgICAgIHlGaWVsZDogIm51bSIsCiAgICAgICAgICBtZXRhOiB7CiAgICAgICAgICAgIG51bTogewogICAgICAgICAgICAgIGFsaWFzOiAi5pWw6YePIiwKICAgICAgICAgICAgICB0aWNrSW50ZXJ2YWw6IDEwLAogICAgICAgICAgICAgIHRpY2tDb3VudDogNQogICAgICAgICAgICB9LAogICAgICAgICAgICBtb250aDogewogICAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKG1vbnRoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGggKyAi5pyIIjsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBsaW5lLnJlbmRlcigpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDoj5zlk4HplIDph48KICAgIGdldE1lbnU6IGZ1bmN0aW9uIGdldE1lbnUoKSB7CiAgICAgIGFwaS5tZW51c2xpc3QoewogICAgICAgIGxpbWl0OiA5OTk5LAogICAgICAgIG9mZnNldDogMSwKICAgICAgICBzaWQ6IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oImlkIikgPyBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJpZCIpIDogIiIKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIHBpZVBsb3QgPSBuZXcgUGllKCJtZW51IiwgewogICAgICAgICAgYXBwZW5kUGFkZGluZzogMTAsCiAgICAgICAgICBkYXRhOiByZXMuZGF0YS5saXN0LAogICAgICAgICAgYW5nbGVGaWVsZDogIm1vbnRobnVtIiwKICAgICAgICAgIGNvbG9yRmllbGQ6ICJuYW1lIiwKICAgICAgICAgIHJhZGl1czogMC45LAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgdHlwZTogImlubmVyIiwKICAgICAgICAgICAgb2Zmc2V0OiAiLTMwJSIsCiAgICAgICAgICAgIGNvbnRlbnQ6IGZ1bmN0aW9uIGNvbnRlbnQoX3JlZikgewogICAgICAgICAgICAgIHZhciBwZXJjZW50ID0gX3JlZi5wZXJjZW50OwogICAgICAgICAgICAgIHJldHVybiAiIi5jb25jYXQoKHBlcmNlbnQgKiAxMDApLnRvRml4ZWQoMCksICIlIik7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgZm9udFNpemU6IDE0LAogICAgICAgICAgICAgIHRleHRBbGlnbjogImNlbnRlciIKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGludGVyYWN0aW9uczogW3sKICAgICAgICAgICAgdHlwZTogImVsZW1lbnQtYWN0aXZlIgogICAgICAgICAgfV0KICAgICAgICB9KTsKICAgICAgICBwaWVQbG90LnJlbmRlcigpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmnKzmnIjplIDph48KICAgIGdldE1vbnRoOiBmdW5jdGlvbiBnZXRNb250aCgpIHsKICAgICAgdmFyIG5ld1RpbWUgPSB0aGlzLiRtb21lbnQoKS5mb3JtYXQoIllZWVktTU0iKTsKICAgICAgdmFyIGxpc3QgPSB0aGlzLmdldERheXNBcnJheShuZXdUaW1lLnNwbGl0KCItIilbMF0sIG5ld1RpbWUuc3BsaXQoIi0iKVsxXSk7CiAgICAgIGFwaS5xdWVyeU1vbnRoU2FsZXMoewogICAgICAgIGxpbWl0OiA5OTk5LAogICAgICAgIG9mZnNldDogMSwKICAgICAgICBzaWQ6IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oImlkIikgPyBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJpZCIpIDogIiIKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhLnRvdGFsID4gMCkgewogICAgICAgICAgcmVzLmRhdGEubGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICAgIGxpc3RbaS50aW1lLnN1YnN0cig1LCA1KV1bIm51bSJdID0gTnVtYmVyKChpLm51bSAqIGkucHJpY2UgKyBsaXN0W2kudGltZS5zdWJzdHIoNSwgNSldWyJudW0iXSkudG9GaXhlZCgyKSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CgogICAgICAgIHZhciBuZXdkYXRhID0gT2JqZWN0LnZhbHVlcyhsaXN0KS5tYXAoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgIHJldHVybiBpOwogICAgICAgIH0pOwogICAgICAgIG5ld2RhdGEuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgcmV0dXJuIE51bWJlcihhLmRheS5zdWJzdHIoMywgMikpIC0gTnVtYmVyKGIuZGF5LnN1YnN0cigzLCAyKSk7CiAgICAgICAgfSk7CiAgICAgICAgdmFyIGxpbmUgPSBuZXcgTGluZSgibW9udGgiLCB7CiAgICAgICAgICBkYXRhOiBuZXdkYXRhLAogICAgICAgICAgcGFkZGluZzogImF1dG8iLAogICAgICAgICAgeEZpZWxkOiAiZGF5IiwKICAgICAgICAgIGNvbG9yOiAiIzYyREFBQiIsCiAgICAgICAgICB5RmllbGQ6ICJudW0iLAogICAgICAgICAgbWV0YTogewogICAgICAgICAgICBudW06IHsKICAgICAgICAgICAgICBhbGlhczogIumUgOmHjyjlhYMpIiAvLyB0aWNrSW50ZXJ2YWw6IDEsCgogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXk6IHsKICAgICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihkYXkpIHsKICAgICAgICAgICAgICAgIHJldHVybiBkYXkgKyAi5pelIjsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBsaW5lLnJlbmRlcigpOwogICAgICB9KTsKICAgIH0sCiAgICBnZXREYXlzQXJyYXk6IGZ1bmN0aW9uIGdldERheXNBcnJheSh5ZWFyLCBtb250aCkgewogICAgICB2YXIgbW9udGhJbmRleCA9IG1vbnRoIC0gMTsKICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aEluZGV4LCAxKTsKICAgICAgdmFyIHJlc3VsdCA9IHt9OwoKICAgICAgd2hpbGUgKGRhdGUuZ2V0TW9udGgoKSA9PSBtb250aEluZGV4KSB7CiAgICAgICAgdmFyIGRheSA9IGRhdGUuZ2V0RGF0ZSgpIDwgMTAgPyAwICsgIiIgKyBkYXRlLmdldERhdGUoKSA6IGRhdGUuZ2V0RGF0ZSgpOwogICAgICAgIHZhciBuZXdtb250aCA9IG1vbnRoOwogICAgICAgIHJlc3VsdFtuZXdtb250aCArICItIiArIGRheV0gPSB7CiAgICAgICAgICBkYXk6IGRheS50b1N0cmluZygpLAogICAgICAgICAgbnVtOiAwCiAgICAgICAgfTsKICAgICAgICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyAxKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7fQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"p20 f-r f-w-t\" style=\"margin: 0 -10px\">\n    <div style=\"width: 50%\" class=\"p10\">\n      <el-card class=\"box-card\">\n        <div class=\"mb30\">用户数量({{people}})</div>\n        <div id=\"container\" style=\"height: 300px\"></div>\n      </el-card>\n    </div>\n\n    <div style=\"width: 50%\" class=\"p10\">\n      <el-card class=\"box-card\">\n        <div class=\"mb30\">菜品销量</div>\n        <div id=\"menu\" style=\"height: 300px\"></div>\n      </el-card>\n    </div>\n\n    <div style=\"width: 100%\" class=\"p10\">\n      <el-card class=\"box-card\">\n        <div class=\"mb30\">本月销量</div>\n        <div id=\"month\" style=\"height: 300px\"></div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as api from \"@/api/api\";\nimport { Line, Pie } from \"@antv/g2plot\";\n\nexport default {\n  components: {},\n  data() {\n    return {\n      url: process.env.VUE_APP_BASE_FILE,\n      list: [],\n      people: 0,\n    };\n  },\n  created() {},\n  mounted() {\n    this.getUser();\n    this.getMenu();\n    this.getMonth();\n  },\n  methods: {\n    //用户数量\n    getUser() {\n      let data = {\n        \"01\": {\n          month: \"01\",\n          num: 0,\n        },\n        \"02\": {\n          month: \"02\",\n          num: 0,\n        },\n        \"03\": {\n          month: \"03\",\n          num: 0,\n        },\n        \"04\": {\n          month: \"04\",\n          num: 0,\n        },\n        \"05\": {\n          month: \"05\",\n          num: 0,\n        },\n        \"06\": {\n          month: \"06\",\n          num: 0,\n        },\n        \"07\": {\n          month: \"07\",\n          num: 0,\n        },\n        \"08\": {\n          month: \"08\",\n          num: 0,\n        },\n        \"09\": {\n          month: \"09\",\n          num: 0,\n        },\n        10: {\n          month: \"10\",\n          num: 0,\n        },\n        11: {\n          month: \"11\",\n          num: 0,\n        },\n        12: {\n          month: \"12\",\n          num: 0,\n        },\n      };\n      api\n        .userlist({\n          limit: 99999,\n          offset: 1,\n        })\n        .then((res) => {\n          if (res.data.total > 0) {\n            this.people = res.data.total;\n            res.data.list.forEach((i) => {\n              data[i.time.substr(5, 2)][\"num\"] += 1;\n            });\n          }\n          let newdata = Object.values(data).map((i) => i);\n          newdata.sort((a, b) => {\n            return Number(a.month) - Number(b.month);\n          });\n\n          const line = new Line(\"container\", {\n            data: newdata,\n            padding: \"auto\",\n            xField: \"month\",\n            yField: \"num\",\n            meta: {\n              num: {\n                alias: \"数量\",\n                tickInterval: 10,\n                tickCount: 5,\n              },\n              month: {\n                formatter: (month) => {\n                  return month + \"月\";\n                },\n              },\n            },\n          });\n\n          line.render();\n        });\n    },\n\n    // 菜品销量\n    getMenu() {\n      api\n        .menuslist({\n          limit: 9999,\n          offset: 1,\n          sid: sessionStorage.getItem(\"id\") ? sessionStorage.getItem(\"id\") : \"\",\n        })\n        .then((res) => {\n          const piePlot = new Pie(\"menu\", {\n            appendPadding: 10,\n            data: res.data.list,\n            angleField: \"monthnum\",\n            colorField: \"name\",\n            radius: 0.9,\n            label: {\n              type: \"inner\",\n              offset: \"-30%\",\n              content: ({ percent }) => `${(percent * 100).toFixed(0)}%`,\n              style: {\n                fontSize: 14,\n                textAlign: \"center\",\n              },\n            },\n            interactions: [{ type: \"element-active\" }],\n          });\n\n          piePlot.render();\n        });\n    },\n\n    // 本月销量\n    getMonth() {\n      let newTime = this.$moment().format(\"YYYY-MM\");\n      let list = this.getDaysArray(\n        newTime.split(\"-\")[0],\n        newTime.split(\"-\")[1]\n      );\n      api\n        .queryMonthSales({\n          limit: 9999,\n          offset: 1,\n          sid: sessionStorage.getItem(\"id\") ? sessionStorage.getItem(\"id\") : \"\",\n        })\n        .then((res) => {\n          if (res.data.total > 0) {\n            res.data.list.forEach((i) => {\n              list[i.time.substr(5, 5)][\"num\"] = Number(\n                (i.num * i.price + list[i.time.substr(5, 5)][\"num\"]).toFixed(2)\n              );\n            });\n          }\n          let newdata = Object.values(list).map((i) => i);\n          newdata.sort((a, b) => {\n            return Number(a.day.substr(3, 2)) - Number(b.day.substr(3, 2));\n          });\n\n          const line = new Line(\"month\", {\n            data: newdata,\n            padding: \"auto\",\n            xField: \"day\",\n            color: \"#62DAAB\",\n            yField: \"num\",\n            meta: {\n              num: {\n                alias: \"销量(元)\",\n                // tickInterval: 1,\n              },\n              day: {\n                formatter: (day) => {\n                  return day + \"日\";\n                },\n              },\n            },\n          });\n\n          line.render();\n        });\n    },\n\n    getDaysArray(year, month) {\n      var monthIndex = month - 1;\n      var date = new Date(year, monthIndex, 1);\n      var result = {};\n      while (date.getMonth() == monthIndex) {\n        let day =\n          date.getDate() < 10 ? 0 + \"\" + date.getDate() : date.getDate();\n        let newmonth = month;\n        result[newmonth + \"-\" + day] = {\n          day: day.toString(),\n          num: 0,\n        };\n        date.setDate(date.getDate() + 1);\n      }\n      return result;\n    },\n  },\n  computed: {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  &-container {\n    margin: 30px;\n  }\n  &-text {\n    font-size: 30px;\n    line-height: 46px;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/admin"}]}