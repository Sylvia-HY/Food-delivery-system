{"remainingRequest":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\src\\views\\myinfo\\index.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\src\\views\\myinfo\\index.vue","mtime":1661843243945},{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\css-loader\\dist\\cjs.js","mtime":1641885191395},{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1642038070263},{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\postcss-loader\\src\\index.js","mtime":1641885191858},{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641885170445},{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1642038070263}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lY2hhcnRzIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDUwMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiMA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/myinfo","sourcesContent":["<template>\n  <div class=\"dashboard-container f-r f-a-c\">\n    <el-form ref=\"addForm\" :model=\"addForm\" :rules=\"rules\" label-width=\"120px\" class=\"addForm\" label-position=\"right\" size=\"small\" style=\"width:500px\">\n      <el-form-item class=\"register-item\" label=\"账号:\" prop=\"user\">\n        <el-input v-model=\"addForm.user\" placeholder=\"请输入账号\" type=\"text\" :disabled=\"true\" />\n      </el-form-item>\n\n      <el-form-item class=\"register-item\" label=\"密码:\" prop=\"pwd\">\n        <el-input v-model=\"addForm.pwd\" placeholder=\"请输入密码\" type=\"password\" />\n      </el-form-item>\n\n      <el-form-item class=\"register-item\" label=\"姓名:\" prop=\"name\">\n        <el-input v-model=\"addForm.name\" placeholder=\"请输入姓名\" type=\"text\" />\n      </el-form-item>\n\n      <el-form-item class=\"register-item\" label=\"手机号:\" prop=\"tel\">\n        <el-input v-model=\"addForm.tel\" placeholder=\"请输入手机号\" type=\"text\" />\n      </el-form-item>\n\n      <el-form-item class=\"register-item\" label=\"店铺地址:\">\n        <el-input v-model=\"addForm.idcard\" placeholder=\"请输入店铺地址\" type=\"text\" />\n      </el-form-item>\n\n      <el-form-item class=\"register-item mt30 t-r\" label=\"\">\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport * as api from \"@/api/api\";\n\nexport default {\n  components: {},\n  data() {\n    return {\n      addForm: {},\n      isAdmin: sessionStorage.getItem(\"isAdmin\") ? true : false,\n      //验证\n      rules: {\n        user: [\n          { required: true, message: \"不能为空\", trigger: \"blur\" },\n          {\n            validator: (rule, value, callback) => {\n              let reg = /^[A-Za-z0-9]+$/;\n              if (value.length < 5 || value.length > 10) {\n                callback(new Error(\"长度为5-10位\"));\n              } else if (!reg.test(value)) {\n                callback(new Error(\"类型为数字和字母!\"));\n              } else {\n                callback();\n              }\n            },\n            trigger: \"blur\",\n          },\n        ],\n        pwd: [\n          { required: true, message: \"不能为空\", trigger: \"blur\" },\n          {\n            validator: (rule, value, callback) => {\n              let reg = /^[A-Za-z0-9]+$/;\n              if (value.length < 5 || value.length > 10) {\n                callback(new Error(\"长度为5-10位\"));\n              } else if (!reg.test(value)) {\n                callback(new Error(\"类型为数字和字母!\"));\n              } else {\n                callback();\n              }\n            },\n            trigger: \"blur\",\n          },\n        ],\n        name: [\n          { required: true, message: \"不能为空\", trigger: \"blur\" },\n          {\n            validator: (rule, value, callback) => {\n              let reg = /^(?:[\\u4e00-\\u9fa5·]{2,16})$/;\n              if (!reg.test(value)) {\n                callback(new Error(\"名称不合法,为2-16位中文!\"));\n              } else {\n                callback();\n              }\n            },\n            trigger: \"blur\",\n          },\n        ],\n        email: [\n          { required: true, message: \"不能为空\", trigger: \"blur\" },\n          {\n            validator: (rule, value, callback) => {\n              let reg = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n              if (!reg.test(value)) {\n                callback(new Error(\"email格式不正确\"));\n              } else {\n                callback();\n              }\n            },\n            trigger: \"blur\",\n          },\n        ],\n        tel: [\n          { required: true, message: \"不能为空\", trigger: \"blur\" },\n          {\n            validator: (rule, value, callback) => {\n              let reg = /^(?:(?:\\+|00)86)?1\\d{10}$/;\n              if (!reg.test(value)) {\n                callback(new Error(\"手机号格式不正确\"));\n              } else {\n                callback();\n              }\n            },\n            trigger: \"blur\",\n          },\n        ],\n        idcard: [\n          { required: true, message: \"不能为空\", trigger: \"blur\" },\n          {\n            validator: (rule, value, callback) => {\n              let reg = /(^\\d{8}(0\\d|10|11|12)([0-2]\\d|30|31)\\d{3}$)|(^\\d{6}(18|19|20)\\d{2}(0[1-9]|10|11|12)([0-2]\\d|30|31)\\d{3}(\\d|X|x)$)/;\n              if (!reg.test(value)) {\n                callback(new Error(\"身份证号格式不正确\"));\n              } else {\n                callback();\n              }\n            },\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  async created() {\n    let data = await api.storeslist({\n      limit: 1,\n      offset: 1,\n      user: sessionStorage.getItem(\"user\"),\n    });\n\n    this.addForm = data.data.list[0];\n  },\n  mounted() {},\n  methods: {\n    async save() {\n      this.$refs.addForm.validate(async (valid) => {\n        if (valid) {\n          await api.storessave(this.addForm);\n          this.$message.success(\"保存成功!\");\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n  computed: {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  &-container {\n    margin: 30px;\n  }\n  &-text {\n    font-size: 30px;\n    line-height: 46px;\n  }\n}\n>>> .avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n  border-color: #409eff;\n}\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n.avatar {\n  width: 178px;\n  height: 178px;\n  display: block;\n}\n</style>\n<style>\n.echarts {\n  width: 100%;\n  height: 500px;\n}\n</style>\n"]}]}