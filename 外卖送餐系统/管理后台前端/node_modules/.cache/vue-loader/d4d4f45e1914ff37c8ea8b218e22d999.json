{"remainingRequest":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\src\\views\\admin\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\src\\views\\admin\\index.vue","mtime":1661931199884},{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641885170445},{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\babel-loader\\lib\\index.js","mtime":1641885170443},{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641885170445},{"path":"E:\\项目\\2022\\082601-外卖送餐\\管理后台前端\\node_modules\\vue-loader\\lib\\index.js","mtime":1642038070263}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGFwaSBmcm9tICJAL2FwaS9hcGkiOwppbXBvcnQgeyBMaW5lLCBQaWUgfSBmcm9tICJAYW50di9nMnBsb3QiOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHt9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1cmw6IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9GSUxFLAogICAgICBsaXN0OiBbXSwKICAgICAgcGVvcGxlOiAwLAogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7fSwKICBtb3VudGVkKCkgewogICAgdGhpcy5nZXRVc2VyKCk7CiAgICB0aGlzLmdldE1lbnUoKTsKICAgIHRoaXMuZ2V0TW9udGgoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v55So5oi35pWw6YePCiAgICBnZXRVc2VyKCkgewogICAgICBsZXQgZGF0YSA9IHsKICAgICAgICAiMDEiOiB7CiAgICAgICAgICBtb250aDogIjAxIiwKICAgICAgICAgIG51bTogMCwKICAgICAgICB9LAogICAgICAgICIwMiI6IHsKICAgICAgICAgIG1vbnRoOiAiMDIiLAogICAgICAgICAgbnVtOiAwLAogICAgICAgIH0sCiAgICAgICAgIjAzIjogewogICAgICAgICAgbW9udGg6ICIwMyIsCiAgICAgICAgICBudW06IDAsCiAgICAgICAgfSwKICAgICAgICAiMDQiOiB7CiAgICAgICAgICBtb250aDogIjA0IiwKICAgICAgICAgIG51bTogMCwKICAgICAgICB9LAogICAgICAgICIwNSI6IHsKICAgICAgICAgIG1vbnRoOiAiMDUiLAogICAgICAgICAgbnVtOiAwLAogICAgICAgIH0sCiAgICAgICAgIjA2IjogewogICAgICAgICAgbW9udGg6ICIwNiIsCiAgICAgICAgICBudW06IDAsCiAgICAgICAgfSwKICAgICAgICAiMDciOiB7CiAgICAgICAgICBtb250aDogIjA3IiwKICAgICAgICAgIG51bTogMCwKICAgICAgICB9LAogICAgICAgICIwOCI6IHsKICAgICAgICAgIG1vbnRoOiAiMDgiLAogICAgICAgICAgbnVtOiAwLAogICAgICAgIH0sCiAgICAgICAgIjA5IjogewogICAgICAgICAgbW9udGg6ICIwOSIsCiAgICAgICAgICBudW06IDAsCiAgICAgICAgfSwKICAgICAgICAxMDogewogICAgICAgICAgbW9udGg6ICIxMCIsCiAgICAgICAgICBudW06IDAsCiAgICAgICAgfSwKICAgICAgICAxMTogewogICAgICAgICAgbW9udGg6ICIxMSIsCiAgICAgICAgICBudW06IDAsCiAgICAgICAgfSwKICAgICAgICAxMjogewogICAgICAgICAgbW9udGg6ICIxMiIsCiAgICAgICAgICBudW06IDAsCiAgICAgICAgfSwKICAgICAgfTsKICAgICAgYXBpCiAgICAgICAgLnVzZXJsaXN0KHsKICAgICAgICAgIGxpbWl0OiA5OTk5OSwKICAgICAgICAgIG9mZnNldDogMSwKICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIGlmIChyZXMuZGF0YS50b3RhbCA+IDApIHsKICAgICAgICAgICAgdGhpcy5wZW9wbGUgPSByZXMuZGF0YS50b3RhbDsKICAgICAgICAgICAgcmVzLmRhdGEubGlzdC5mb3JFYWNoKChpKSA9PiB7CiAgICAgICAgICAgICAgZGF0YVtpLnRpbWUuc3Vic3RyKDUsIDIpXVsibnVtIl0gKz0gMTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgICBsZXQgbmV3ZGF0YSA9IE9iamVjdC52YWx1ZXMoZGF0YSkubWFwKChpKSA9PiBpKTsKICAgICAgICAgIG5ld2RhdGEuc29ydCgoYSwgYikgPT4gewogICAgICAgICAgICByZXR1cm4gTnVtYmVyKGEubW9udGgpIC0gTnVtYmVyKGIubW9udGgpOwogICAgICAgICAgfSk7CgogICAgICAgICAgY29uc3QgbGluZSA9IG5ldyBMaW5lKCJjb250YWluZXIiLCB7CiAgICAgICAgICAgIGRhdGE6IG5ld2RhdGEsCiAgICAgICAgICAgIHBhZGRpbmc6ICJhdXRvIiwKICAgICAgICAgICAgeEZpZWxkOiAibW9udGgiLAogICAgICAgICAgICB5RmllbGQ6ICJudW0iLAogICAgICAgICAgICBtZXRhOiB7CiAgICAgICAgICAgICAgbnVtOiB7CiAgICAgICAgICAgICAgICBhbGlhczogIuaVsOmHjyIsCiAgICAgICAgICAgICAgICB0aWNrSW50ZXJ2YWw6IDEwLAogICAgICAgICAgICAgICAgdGlja0NvdW50OiA1LAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbW9udGg6IHsKICAgICAgICAgICAgICAgIGZvcm1hdHRlcjogKG1vbnRoKSA9PiB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBtb250aCArICLmnIgiOwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgfSk7CgogICAgICAgICAgbGluZS5yZW5kZXIoKTsKICAgICAgICB9KTsKICAgIH0sCgogICAgLy8g6I+c5ZOB6ZSA6YePCiAgICBnZXRNZW51KCkgewogICAgICBhcGkKICAgICAgICAubWVudXNsaXN0KHsKICAgICAgICAgIGxpbWl0OiA5OTk5LAogICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgc2lkOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCJpZCIpID8gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgiaWQiKSA6ICIiLAogICAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgY29uc3QgcGllUGxvdCA9IG5ldyBQaWUoIm1lbnUiLCB7CiAgICAgICAgICAgIGFwcGVuZFBhZGRpbmc6IDEwLAogICAgICAgICAgICBkYXRhOiByZXMuZGF0YS5saXN0LAogICAgICAgICAgICBhbmdsZUZpZWxkOiAibW9udGhudW0iLAogICAgICAgICAgICBjb2xvckZpZWxkOiAibmFtZSIsCiAgICAgICAgICAgIHJhZGl1czogMC45LAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIHR5cGU6ICJpbm5lciIsCiAgICAgICAgICAgICAgb2Zmc2V0OiAiLTMwJSIsCiAgICAgICAgICAgICAgY29udGVudDogKHsgcGVyY2VudCB9KSA9PiBgJHsocGVyY2VudCAqIDEwMCkudG9GaXhlZCgwKX0lYCwKICAgICAgICAgICAgICBzdHlsZTogewogICAgICAgICAgICAgICAgZm9udFNpemU6IDE0LAogICAgICAgICAgICAgICAgdGV4dEFsaWduOiAiY2VudGVyIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBpbnRlcmFjdGlvbnM6IFt7IHR5cGU6ICJlbGVtZW50LWFjdGl2ZSIgfV0sCiAgICAgICAgICB9KTsKCiAgICAgICAgICBwaWVQbG90LnJlbmRlcigpOwogICAgICAgIH0pOwogICAgfSwKCiAgICAvLyDmnKzmnIjplIDph48KICAgIGdldE1vbnRoKCkgewogICAgICBsZXQgbmV3VGltZSA9IHRoaXMuJG1vbWVudCgpLmZvcm1hdCgiWVlZWS1NTSIpOwogICAgICBsZXQgbGlzdCA9IHRoaXMuZ2V0RGF5c0FycmF5KAogICAgICAgIG5ld1RpbWUuc3BsaXQoIi0iKVswXSwKICAgICAgICBuZXdUaW1lLnNwbGl0KCItIilbMV0KICAgICAgKTsKICAgICAgYXBpCiAgICAgICAgLnF1ZXJ5TW9udGhTYWxlcyh7CiAgICAgICAgICBsaW1pdDogOTk5OSwKICAgICAgICAgIG9mZnNldDogMSwKICAgICAgICAgIHNpZDogc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgiaWQiKSA/IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oImlkIikgOiAiIiwKICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIGlmIChyZXMuZGF0YS50b3RhbCA+IDApIHsKICAgICAgICAgICAgcmVzLmRhdGEubGlzdC5mb3JFYWNoKChpKSA9PiB7CiAgICAgICAgICAgICAgbGlzdFtpLnRpbWUuc3Vic3RyKDUsIDUpXVsibnVtIl0gPSBOdW1iZXIoCiAgICAgICAgICAgICAgICAoaS5udW0gKiBpLnByaWNlICsgbGlzdFtpLnRpbWUuc3Vic3RyKDUsIDUpXVsibnVtIl0pLnRvRml4ZWQoMikKICAgICAgICAgICAgICApOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICAgIGxldCBuZXdkYXRhID0gT2JqZWN0LnZhbHVlcyhsaXN0KS5tYXAoKGkpID0+IGkpOwogICAgICAgICAgbmV3ZGF0YS5zb3J0KChhLCBiKSA9PiB7CiAgICAgICAgICAgIHJldHVybiBOdW1iZXIoYS5kYXkuc3Vic3RyKDMsIDIpKSAtIE51bWJlcihiLmRheS5zdWJzdHIoMywgMikpOwogICAgICAgICAgfSk7CgogICAgICAgICAgY29uc3QgbGluZSA9IG5ldyBMaW5lKCJtb250aCIsIHsKICAgICAgICAgICAgZGF0YTogbmV3ZGF0YSwKICAgICAgICAgICAgcGFkZGluZzogImF1dG8iLAogICAgICAgICAgICB4RmllbGQ6ICJkYXkiLAogICAgICAgICAgICBjb2xvcjogIiM2MkRBQUIiLAogICAgICAgICAgICB5RmllbGQ6ICJudW0iLAogICAgICAgICAgICBtZXRhOiB7CiAgICAgICAgICAgICAgbnVtOiB7CiAgICAgICAgICAgICAgICBhbGlhczogIumUgOmHjyjlhYMpIiwKICAgICAgICAgICAgICAgIC8vIHRpY2tJbnRlcnZhbDogMSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGRheTogewogICAgICAgICAgICAgICAgZm9ybWF0dGVyOiAoZGF5KSA9PiB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBkYXkgKyAi5pelIjsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pOwoKICAgICAgICAgIGxpbmUucmVuZGVyKCk7CiAgICAgICAgfSk7CiAgICB9LAoKICAgIGdldERheXNBcnJheSh5ZWFyLCBtb250aCkgewogICAgICB2YXIgbW9udGhJbmRleCA9IG1vbnRoIC0gMTsKICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aEluZGV4LCAxKTsKICAgICAgdmFyIHJlc3VsdCA9IHt9OwogICAgICB3aGlsZSAoZGF0ZS5nZXRNb250aCgpID09IG1vbnRoSW5kZXgpIHsKICAgICAgICBsZXQgZGF5ID0KICAgICAgICAgIGRhdGUuZ2V0RGF0ZSgpIDwgMTAgPyAwICsgIiIgKyBkYXRlLmdldERhdGUoKSA6IGRhdGUuZ2V0RGF0ZSgpOwogICAgICAgIGxldCBuZXdtb250aCA9IG1vbnRoOwogICAgICAgIHJlc3VsdFtuZXdtb250aCArICItIiArIGRheV0gPSB7CiAgICAgICAgICBkYXk6IGRheS50b1N0cmluZygpLAogICAgICAgICAgbnVtOiAwLAogICAgICAgIH07CiAgICAgICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgMSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0sCiAgfSwKICBjb21wdXRlZDoge30sCn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"p20 f-r f-w-t\" style=\"margin: 0 -10px\">\n    <div style=\"width: 50%\" class=\"p10\">\n      <el-card class=\"box-card\">\n        <div class=\"mb30\">用户数量({{people}})</div>\n        <div id=\"container\" style=\"height: 300px\"></div>\n      </el-card>\n    </div>\n\n    <div style=\"width: 50%\" class=\"p10\">\n      <el-card class=\"box-card\">\n        <div class=\"mb30\">菜品销量</div>\n        <div id=\"menu\" style=\"height: 300px\"></div>\n      </el-card>\n    </div>\n\n    <div style=\"width: 100%\" class=\"p10\">\n      <el-card class=\"box-card\">\n        <div class=\"mb30\">本月销量</div>\n        <div id=\"month\" style=\"height: 300px\"></div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as api from \"@/api/api\";\nimport { Line, Pie } from \"@antv/g2plot\";\n\nexport default {\n  components: {},\n  data() {\n    return {\n      url: process.env.VUE_APP_BASE_FILE,\n      list: [],\n      people: 0,\n    };\n  },\n  created() {},\n  mounted() {\n    this.getUser();\n    this.getMenu();\n    this.getMonth();\n  },\n  methods: {\n    //用户数量\n    getUser() {\n      let data = {\n        \"01\": {\n          month: \"01\",\n          num: 0,\n        },\n        \"02\": {\n          month: \"02\",\n          num: 0,\n        },\n        \"03\": {\n          month: \"03\",\n          num: 0,\n        },\n        \"04\": {\n          month: \"04\",\n          num: 0,\n        },\n        \"05\": {\n          month: \"05\",\n          num: 0,\n        },\n        \"06\": {\n          month: \"06\",\n          num: 0,\n        },\n        \"07\": {\n          month: \"07\",\n          num: 0,\n        },\n        \"08\": {\n          month: \"08\",\n          num: 0,\n        },\n        \"09\": {\n          month: \"09\",\n          num: 0,\n        },\n        10: {\n          month: \"10\",\n          num: 0,\n        },\n        11: {\n          month: \"11\",\n          num: 0,\n        },\n        12: {\n          month: \"12\",\n          num: 0,\n        },\n      };\n      api\n        .userlist({\n          limit: 99999,\n          offset: 1,\n        })\n        .then((res) => {\n          if (res.data.total > 0) {\n            this.people = res.data.total;\n            res.data.list.forEach((i) => {\n              data[i.time.substr(5, 2)][\"num\"] += 1;\n            });\n          }\n          let newdata = Object.values(data).map((i) => i);\n          newdata.sort((a, b) => {\n            return Number(a.month) - Number(b.month);\n          });\n\n          const line = new Line(\"container\", {\n            data: newdata,\n            padding: \"auto\",\n            xField: \"month\",\n            yField: \"num\",\n            meta: {\n              num: {\n                alias: \"数量\",\n                tickInterval: 10,\n                tickCount: 5,\n              },\n              month: {\n                formatter: (month) => {\n                  return month + \"月\";\n                },\n              },\n            },\n          });\n\n          line.render();\n        });\n    },\n\n    // 菜品销量\n    getMenu() {\n      api\n        .menuslist({\n          limit: 9999,\n          offset: 1,\n          sid: sessionStorage.getItem(\"id\") ? sessionStorage.getItem(\"id\") : \"\",\n        })\n        .then((res) => {\n          const piePlot = new Pie(\"menu\", {\n            appendPadding: 10,\n            data: res.data.list,\n            angleField: \"monthnum\",\n            colorField: \"name\",\n            radius: 0.9,\n            label: {\n              type: \"inner\",\n              offset: \"-30%\",\n              content: ({ percent }) => `${(percent * 100).toFixed(0)}%`,\n              style: {\n                fontSize: 14,\n                textAlign: \"center\",\n              },\n            },\n            interactions: [{ type: \"element-active\" }],\n          });\n\n          piePlot.render();\n        });\n    },\n\n    // 本月销量\n    getMonth() {\n      let newTime = this.$moment().format(\"YYYY-MM\");\n      let list = this.getDaysArray(\n        newTime.split(\"-\")[0],\n        newTime.split(\"-\")[1]\n      );\n      api\n        .queryMonthSales({\n          limit: 9999,\n          offset: 1,\n          sid: sessionStorage.getItem(\"id\") ? sessionStorage.getItem(\"id\") : \"\",\n        })\n        .then((res) => {\n          if (res.data.total > 0) {\n            res.data.list.forEach((i) => {\n              list[i.time.substr(5, 5)][\"num\"] = Number(\n                (i.num * i.price + list[i.time.substr(5, 5)][\"num\"]).toFixed(2)\n              );\n            });\n          }\n          let newdata = Object.values(list).map((i) => i);\n          newdata.sort((a, b) => {\n            return Number(a.day.substr(3, 2)) - Number(b.day.substr(3, 2));\n          });\n\n          const line = new Line(\"month\", {\n            data: newdata,\n            padding: \"auto\",\n            xField: \"day\",\n            color: \"#62DAAB\",\n            yField: \"num\",\n            meta: {\n              num: {\n                alias: \"销量(元)\",\n                // tickInterval: 1,\n              },\n              day: {\n                formatter: (day) => {\n                  return day + \"日\";\n                },\n              },\n            },\n          });\n\n          line.render();\n        });\n    },\n\n    getDaysArray(year, month) {\n      var monthIndex = month - 1;\n      var date = new Date(year, monthIndex, 1);\n      var result = {};\n      while (date.getMonth() == monthIndex) {\n        let day =\n          date.getDate() < 10 ? 0 + \"\" + date.getDate() : date.getDate();\n        let newmonth = month;\n        result[newmonth + \"-\" + day] = {\n          day: day.toString(),\n          num: 0,\n        };\n        date.setDate(date.getDate() + 1);\n      }\n      return result;\n    },\n  },\n  computed: {},\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard {\n  &-container {\n    margin: 30px;\n  }\n  &-text {\n    font-size: 30px;\n    line-height: 46px;\n  }\n}\n</style>\n"]}]}